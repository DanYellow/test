name: PR to master
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€ - ${{ github.ref }}
on:
  pull_request:
    branches: [main]
    # https://frontside.com/blog/2020-05-26-github-actions-pull_request/
    types: [ opened, reopened, edited, synchronize ]

jobs:
  # unit_tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #     - name: Set github user
  #       run: git config --global user.email "test@example.com" && git config --global user.name "CI/CD"
  #     - name: Install the dependencies
  #       run: npm ci
  #     - run: echo "$FOO"
  #     # - run: echo "${{toJSON(github)}}"
  #     - name: Run unit tests
  #       run: npm run test --if-present
  #     # - name: Display date
  #     #   run: FOO=$(date +'%Y-%m-%dT%H:%M:%S')
  #     - name: Display date
  #       run: echo "MY_VAR=$(date +'%Y/%m/%d')" >> "$GITHUB_ENV"
  #     - run: |
  #         printf '%s\n' "$VITE_HELLO" # This will output 'yellow'
  define_env:
    runs-on: ubuntu-latest
    outputs:
      VITE_LIST_COLLABORATORS: ${{ steps.test.outputs.VITE_LIST_COLLABORATORS }}
    steps:
      - run: |
          list_collaborators="$(gh api /repos/DanYellow/test/collaborators)"

          result='[]'
          for collaborator in `echo $list_collaborators | jq --raw-output -c '.[]'`; do
            login=`echo $collaborator | jq '.login'`
            user_request="$(gh api /users/$(echo $login | jq --raw-output))"

            collaborator="{}"
            html_url=`echo $user_request | jq '.html_url'`
            name=`echo $user_request | jq '.name'`

            collaborator="$(jq ".login=${login}" <<< "$collaborator")"
            collaborator="$(jq ".name=${name}" <<< "$collaborator")"
            collaborator="$(jq ".html_url=${html_url}" <<< "$collaborator")"

            # echo "$avatar_url"
            result="$(jq --argjson val "$collaborator" '. += [$val]' <<< "$result")"
          done

          echo "$result"
          str_result="$(jq '.| tostring' <<< "$result")"

          echo "VITE_LIST_COLLABORATORS=$str_result" >> "$GITHUB_OUTPUT"
          echo "RESULT=10" >> $GITHUB_ENV
          # echo "VITE_LIST_COLLABORATORS=$str_result" >> "$GITHUB_ENV"
          echo "$result" > foo.json
        id: test
      - run: echo "${{ steps.test.outputs.VITE_LIST_COLLABORATORS }}"
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  e2e_tests:
    runs-on: ubuntu-latest
    needs: define_env
    steps:
      - run: echo "The result is $RESULT"
      - run: echo "The sum is ${{ needs.define_env.outputs.VITE_LIST_COLLABORATORS }}"
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set github user
        run: git config user.email "test@example.com" && git config user.name "CI/CD"
      - name: Install the dependencies
        run: npm ci
      - name: Install playwright
        run: npx playwright install --with-deps
      - name: Run smoke tests
        run: npx playwright test --project=chromium --grep @smoke
      - name: Run non-smoke tests
        run: npx playwright test --project=chromium --grep-invert @smoke
  build:
    # needs: [e2e_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set github user
        run: git config --global user.email "test@example.com" && git config --global user.name "CI/CD"
      - name: Install the dependencies
        run: npm ci
      # - name: Display date
      #   run: echo "VITE_HELLO=$(date +'%Y-%m-%dT%H-%M-%S')" >> "$GITHUB_ENV"
      - name: Create build
        run: npm run build
      - run: |
          chmod +x ${{ github.workspace }}/copy.sh
          ${{ github.workspace }}/copy.sh ${{ github.workspace }}
      - name: Generate artifact
        uses: actions/upload-artifact@master
        with:
          name: bundle
          path: ./dist
